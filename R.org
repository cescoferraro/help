* Control Files
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:3F5D7D24-91F0-4CBD-A514-C9D0B9821BDA
:END:

** Configuration
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:091465F6-8E3F-4736-9BF0-A498785F5E1D
:END:

The goal here is to get R set up thoughtfully and quickly. The profile
and environ set it up correctly. Always remember this and run R using those
configuration files.

- Steps
  - Review and Run =.Rsetup.sh= prepare the OS for R and R for your configuration
  - Review =.Renviron= to verify it is what you expect
  - Review =.Rprofile= to recall how you set it up
  - Review and Source =Rinstall= to install required packages
    - Verify the lib path is in the home directory =.libPaths()=
    - When R starts, it won't find any of the required packages. It will
      complain a lot. That is OK. Just keep running the install script until
      it is happy: =source("~/.Rinstall.r")=. Then restart R and everything should
      be fine.
    - Run the installation script 3-5 times, each time
      - Check the version that is running
      - Go back and read the transcript and make sure that it looks right
        - Build warnings
        - Configuration errors
        - Mask warnings
        - Package notifications
          - For example
            #+BEGIN_EXAMPLE
data.table 1.9.6  For help type ?data.table or https://github.com/Rdatatable/data.table/wiki
The fastest way to learn (by data.table authors): https://www.datacamp.com/courses/data-analysis-the-data-table-way
            #+END_EXAMPLE
          - …
            #+BEGIN_EXAMPLE
Attaching package: ‘magrittr’

The following objects are masked from ‘package:testthat’:

    equals, is_less_than, not

            #+END_EXAMPLE
          - …
            #+BEGIN_EXAMPLE
------------------------------------------------------------------------------
data.table + dplyr code now lives in dtplyr.
Please library(dtplyr)!
------------------------------------------------------------------------------
            #+END_EXAMPLE
      - Eventually that script will fail, for example
        - there is no package called ‘devtools’
          - Called =install.packages("devtools")= manually
          - Install order error
      - After running it a couple of times, it is finished

*.Rsetup*
#+NAME: org_gcr_2017-05-12_mara_290AFF18-0B4B-4EA4-9DD6-5AF56F4D8666
#+begin_src sh :tangle .Rsetup.sh :comments no :tangle-mode (identity #o755)
⟪rsetup-defs⟫
#+end_src

*.Rprofile*
#+NAME: org_gcr_2017-05-12_mara_782A27E2-93A2-46E7-8486-5A8D7D7491B9
#+begin_src R :tangle .Rprofile :comments no
## -*- mode: R; -*-
⟪rprofile-def⟫
.First <- function() {
    gcr <- new.env()
    ⟪rfirst-defs⟫
    base::attach(gcr, name="gcr", warn.conflicts=FALSE)
}
fortune()
#+end_src

*.Renviron*
#+NAME: org_gcr_2017-05-12_mara_CDF69874-1145-4301-8322-A5D59BB37BD8
#+begin_src sh :tangle .Renviron :comments no
# -*- mode: sh; -*-
⟪renviron-def⟫
#+end_src

*.Rinstall*
#+NAME: org_gcr_2017-05-12_mara_B59C073C-5783-4812-966A-53FDF8F9BE5C
#+begin_src sh :tangle .Rinstall.r :comments no
⟪rinstall-def⟫
#+end_src

** .Rsetup
:PROPERTIES:
:header-args: :noweb-ref rsetup-defs
:ID:       org_gcr_2017-05-12_mara:898031D5-9930-420A-9DDD-2F5FA0AA6D63
:END:

Prepare the operating system to host R.

Recreate the packages directory.

#+NAME: org_gcr_2017-05-12_mara_5B7DB196-95F7-43D7-AF8A-081748C7A91E
#+BEGIN_SRC sh
rm -rf ~/.Rpackages
mkdir ~/.Rpackages
#+END_SRC

Symbolically link all of the control files.

#+NAME: org_gcr_2017-05-12_mara_9BFCAC2B-E570-4038-82FE-C7A4B1AB054C
#+BEGIN_SRC sh
rm ~/.Rprofile
ln -sfn ~/src/help/.Rprofile ~/.Rprofile
rm ~/.Renviron
ln -sfn ~/src/help/.Renviron ~/.Renviron
rm ~/.Rinstall.r
ln -sfn ~/src/help/.Rinstall.r ~/.Rinstall.r
#+END_SRC

** .Rprofile [fn:89a51cf1: https://stackoverflow.com/questions/1189759/expert-r-users-whats-in-your-rprofile]
      :PROPERTIES:
      :header-args: :noweb-ref rprofile-def
      :ID:       org_gcr_2017-05-12_mara:F665989E-724D-4983-A8B1-29F566291722
      :END:

- When you install packages, R needs to know which repository it should use. If
  you don't tell it, then it will ask you every time. It is just doing its job.
  Make it easier for yourself and specify a repo for once and for all.
  - Via [fn:41269bb7: http://www.r-bloggers.com/installing-r-packages/]
  - Built-in docs explain that =local= should be used here
  - This could also be a one-liner: ~options("repos" = c(CRAN = "http://cran.r-project.org/"))~
#+NAME: org_gcr_2017-05-12_mara_2776C7D7-893F-4144-9CDA-BE36909E4262
#+begin_src R
local({
    r = getOption("repos")
    r["CRAN"] = "https://cran.r-project.org/"
    options(repos = r)
})
#+end_src

- By default, hitting enter in the =browser= will submit a =c= for "continue
  execution at the next statement"
  - It is too easy to hit enter when you didn't mean it
  - It just /feels/ imprecise
  - Never let this happen, disable that feature
#+NAME: org_gcr_2017-05-12_mara_DF9DC3F2-E1FA-494C-9F6A-8358E158FFCA
#+begin_src R
options(browserNLdisabled = TRUE)
#+end_src

Show timestamps to 3 sub-seconds:
#+NAME: org_gcr_2017-05-12_mara_87D900DF-7B80-4579-A6C9-1031890A8BA8
#+begin_src R
options("digits.secs"=3)
#+end_src

Do not allow automatic coercion of strings into factors, as you can specify this
by argument to make it /real/ obvious. Looks like the best way is to leave it
alone globally and always do it by hand though. hwickam commented that it is
bad, bad idea to make this option global not because of your code, but because
of everyone else's that you are using which relies on the option being set to
=TRUE=. Learning more about this, before this was an option, it was the default
behavior (being true) because statisticians rarely dealth with character
arrays. As the popularity of R skyrocketed, suddently people wanted to work
with them a lot. It isn't custom code that expects it to be true, rather, it
is library code that expects it to true. Definitely something that you don't
want to mess with.
#+NAME: org_gcr_2017-05-12_mara_D9A48141-CD6E-4BD5-8FB5-95AF5AB99F9C
#+begin_src R
options(stringsAsFactors=TRUE)
#+end_src

This might be /too much/, but always show a call stack when *any* warnings or
errors occur
#+NAME: org_gcr_2017-05-12_mara_2797E9CB-6074-432A-A716-7422A347FCD7
#+begin_src R
options(showWarnCalls=TRUE)
options(showErrorCalls=TRUE)
#+end_src

Be highly conservative about errors and warnings: handle the former immediately
and cause the latter to be errors. However, only do this after your workspace
has initialized correctly. Do so too soon and most things won't work because
this approach is only to handle /my/ issues. Imagine of the whole work just
handled their own issues! Anway, the safe values are set here, leave them alone.
Making them more aggressive will break your startup. When you are ready to set
things to be more aggressive, turn it on yourself
#+NAME: org_gcr_2017-05-12_mara_F9F57CE4-9446-40D8-8E00-06DF5C1B102C
#+begin_src R
options(error=NULL)
options(warn=0)
#+end_src

Don't print more than 500 lines. If you can grok more than 500 lines then please
teach me. Be at ease, there is a helper to remove that restriction, just in case.
#+NAME: org_gcr_2017-05-12_mara_88843855-5194-48BD-A295-9487FD44AFB8
#+begin_src R
options(max.print=500)
#+end_src

Partial matching is a neat and flexible feature for objects. In theory, it is
quite powerful and convenient. In practice it seems like a really bad idea to
me. It is a /personal preference/. It only makes sense from that perspective.
This could bork 3rd party code.
#+NAME: org_gcr_2017-05-12_mara_DA5994F4-E4B2-4AAF-ABA3-1894FA1BD6DA
#+begin_src R
options(warnPartialMatchDollar = TRUE)
#+end_src

Locale:
- Make sure that the language is set correctly. I couldn't find anything specific
  about setting it this way other than various posts. In practice you would really
  put all of this in your system environment configuration, but I'm wanting to be
  a little more particular here because it affects operations on data structures,
  in particular sorting.
- Error messages are mostly useful when they are displayed in English, so make
  sure that the locale is always English [fn:24499ef7:    http://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Localization-of-messages].
  "Note that the LANGUAGE environment variable has precedence over ~LC_MESSAGES~ in
  selecting the language for message translation on most R platforms." [fn:51fe4215: http://stat.ethz.ch/R-manual/R-devel/library/base/html/locales.html]
- Note:
  - My previous approach was to define a top level binding for the locale string
    and pass that reference to bind each of the following settings. That was fine
    until I wanted to be able to easily clear out all of the top-level bindngs to
    "reset" it with a =rm(ls())= kind of thing. For that reason, I just use the
    manifest strings here.
#+NAME: org_gcr_2017-05-12_mara_2625A28E-D2FD-4239-B7F0-C44393AD5845
#+begin_src R
Sys.setenv(LANG = "en_US.UTF-8")
Sys.setlocale("LC_COLLATE", "en_US.UTF-8")
Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")
#+end_src

Set the same random seed.

#+NAME: org_gcr_2017-05-12_mara_88DDEE7D-F188-4E1F-B42D-7B90ACE48F75
#+begin_src R
set.seed(970396220)
#+END_SRC

*** Packages
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:E5E7A597-B53A-476B-83A4-0B4114125E0C
:END:

<2014-11-14 Fri>
Below is a try to auto-install packages if they are not available, and, it seems
to have failed. Perhaps there is a better way, and I do need to find it. Until
then I will install as-needed. As such, I suppose that I've found it.

**** assertthat
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:404A7BC2-F0E1-4E49-8CCA-D693D3430741
:END:

Design-by-contract  [fn:bc0c6d68: http://cran.r-project.org/web/packages/assertthat/index.html
] is a great, great thing. Make it much easier with valuable
functions and useful messages!

Cheatsheet:
- Always use ~assert_that~
- Use
  - ℝ built ins to check tests
  - Additionally via =assertthat=:
    - =is.flag=
    - =is.string=
    - =has_name=
    - =has_attr=
    - =is.count=
    - =are_equal=
    - =not_empty=
    - =noNA=
    - =is.dir=
    - =is.writeable= and =is.readable=
    - =has_extension=

#+NAME: org_gcr_2017-05-12_mara_B7F431B3-C5EC-42FB-8C0B-63BEE51FE409
#+begin_src R
library(assertthat)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_2B97E549-76E0-4EBD-AC7B-68A9AF02D81B
#+begin_src R :noweb-ref rinstall-def
if(! require(assertthat)){
    install.packages("assertthat")
}
#+end_src

**** testthat
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:8B68967C-5F28-47AC-BD20-758661328199
:END:

Design-by-contract and unit-tests [fn:d61c81a6: http://cran.r-project.org/web/packages/testthat/index.html]
go hand-in-hand.

Expectations:
- =equals() :=: uses =all.equal()= to check for equality with numerical tolerance
  - Shorthand: =expect_equal(x, y)=
- =is_identical_to()= :: uses =identical()= to check for exact equality
  - Shorthand: =expect_identical(x, y)=
- =is_equivalent_to()= :: is a more relaxed version of =equals()= that ignores attributes
  - Shorthand: =expect_equivalent(x, y)=
- =is_a()= :: checks that an object =inherit()='s from a specified class
  - Shorthand: =expect_is(x, y)=
- =matches()= :: matches a character vector against a regular expression.
  - The optional all argument controls where all elements or just one element
    need to match.
  - Shorthand: =expect_matches(x, y)=
- =prints_text()= :: matches the printed output from an expression against a
  regular expression
  - Shorthand: =expect_output(x, y)=
- =shows_message()= :: checks that an expression shows a message
  - Shorthand: =expect_message(x, y)=
- =gives_warning()= :: expects that you get a warning
  - Shorthand: =expect_warning(x, y)=
- =throws_error()= :: verifies that the expression throws an error.
  - You can also supply a regular expression which is applied to the text of the
    error
  - Shorthand: =expect_error(x, y)=
- =is_true()= :: is a useful catchall if none of the other expectations do what
  you want - it checks that an expression is true
  - =is_false()= is the complement of =is_true()=
  - Shorthand: =expect_true(x)=
  - Shorthand: =expect_false(x)=

- Notes
  - "Each test is run in its own environment so it is self-contained."
    - Plain old code so you can modify the global environment FYI

#+NAME: org_gcr_2017-05-12_mara_BD9434A3-7ABA-47C9-8DF9-9D1333E88FFC
#+begin_src R
library(testthat)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_36895EED-30D0-4A93-95A8-B067FEF6426A
#+begin_src R :noweb-ref rinstall-def
if(! require(testthat)) {
    install.packages("testthat")
}
#+end_src

**** stringr
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:A25AE0EF-0169-4D2A-9907-D59FA7F0E9C4
:END:

Make it really easy to work with strings [fn:bb2c9d86: http://cran.r-project.org/web/packages/stringr/index.html]. That is indeed a good goal, and
the reason that I installed this initially was because =testthat= mentions that
it is used.
#+NAME: org_gcr_2017-05-12_mara_C048FA06-302D-4C4A-AAB1-65B4AE4A5F15
#+begin_src R
library(stringr)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_41A574C0-88B8-496F-831D-46D25A417D93
#+begin_src R :noweb-ref rinstall-def
if(! require(stringr)) {
    install.packages("stringr")
}
#+end_src

**** sqldf
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:D6EBC636-F22D-452F-B777-15F7C4C025A4
:END:

How you extract data from a dataframe is flexible and everyone can and may do it
differently. One option available is to use =SQL= [fn:2e49b888: http://cran.r-project.org/web/packages/sqldf/index.html], so make it available.

Comments taken from [fn:c116c9a5: http://randyzwitch.com/sqldf-package-r/]
- "This [using SQL] is a skill that every analyst should possess"
- "Being able to write SQL will save you time and provide you with a way of
  getting repeatable results so that you don't have to focus on doing the
  calculations all the time and worrying about errors in Excel"
- "[instead] You can focus on the task of actually analyzing your data"

Notes from the user manual [fn:0ef50a78: http://cran.r-project.org/web/packages/sqldf/index.html]
- Interesting package info
  - "Title Perform SQL Selects on R Data Frames"
  - "Author G. Grothendieck <ggrothendieck@gmail.com>"
  - "Description Description: Manipulate R data frames using SQL."
  - "Depends R (>= 2.14.0), gsubfn (>= 0.6), proto, RSQLite (>= 0.8-0),RSQLite.extfuns"
- Google group mentioned [fn:0bf2d03a: https://groups.google.com/forum/#!forum/sqldf], joined it
- Official site mentioned and it has good docs
- Seems to uses SQLLite
- =read.csv.sql=
  - "Read a file into R filtering it with an sql statement. Only the filtered
    portion is processed by R so that files larger than R can otherwise handle
    can be accommodated."
  - Parms
    - Handles =http= and =ftp= =URLs=
    - =filter=
      - "If specified, this should be a shell/batch command that the input file is
        piped through. For read.csv2.sql it is by default the following on
        non-Windows systems: tr , .. This translates all commas in the file to
        dots."
        - Why is that specific example mentioned?
    - =field.types=
      - State the SQLite types for the column names
      - Rarely needed
    - =dbname=
      - "As in =sqldf= except that the default is =tempfile()=. Specifying =NULL= will
        put the database in memory which may improve speed but will limit the size
        of the database by the available memory."
  - Details
    - "Reads the indicated file into an sql database creating the database if it
      does not already exist. Then it applies the sql statement returning the
      result as a data frame. If the database did not exist prior to this
      statement it is removed."
    - "Note that it uses facilities of SQLite to read the file which are
      intended for speed and therefore not as flexible as in R. For example, it
      does not recognize quoted fields as special but will regard the quotes as
      part of the field. See the sqldf help for more information."
    - "=read.csv2.sql= is like =read.csv.sql= except the default sep is ";" and the
      default filter translates all commas in the file to decimal points (i.e.
      to dots)."
  - Value
    - "If the sql statement is a select statement then a data frame is returned."
- =sqldf=
  - Description :: SQL select on data frames
  - Arguments
    - =stringsAsFactors does what you think
    - =row.names= could be useful
    - =envir= could make it safer
    - =method= determines how to type the data from the database into a dataframe
      - Looks like a *powerhouse* feature
      - Could greatly simplify data brokering
    - =file.format=
      - =eol= handling mentioned across platforms
      - Ran into this with the built-in reader
    - =dbname=
      - SQLite creates an in-memory database!
  - Details
    - The typical action of sqldf is to
    - create a database :: in memory
    - read in the data frames and files :: used in the select statement. This is
      done by scanning the select statement to see which words in the select
      statement are of class "data.frame" or "file" in the parent frame, or the
      specified environment if envir is used, and for each object found by
      reading it into the database if it is a data frame. Note that this
      heuristic usually reads in the wanted data frames and files but on
      occasion may harmlessly reads in extra ones too.
    - run the select statement :: getting the result as a data frame
    - assign the classes :: of the returned data frame’s columns if
      method = "auto". This is done by checking all the column names in the
      read-in data frames and if any are the same as a column output from the
      data base then that column is coerced to the class of the column whose
      name matched. If the class of the column is "factor" or "ordered" or if
      the column is not matched then the column is returned as is. If
      method = "auto.factor" then processing is similar except that "factor"
      and "ordered" classes and their levels will be assigned as well. The
      "auto.factor" heuristic is less reliable than the "auto" heuristic. If
      method = "raw" then the classes are returned as is from the database.
    - cleanup :: If the database was created by sqldf then it is deleted;
      otherwise, all tables that were created are dropped in order to leave the
      database in the same state that it was before. The database connection is
      terminated.
    - Warning :: Although sqldf is usually used with on-the-fly databases which
      it automatically sets up and destroys if you wish to use it with existing
      databases be sure to back up your database prior to using it since
      incorrect operation could destroy the entire database.
  - Value
    - The result of the specified select statement is output as a data frame.
    - If a vector of sql statements is given as x then the result of the last
      one is returned.
    - If the x and connection arguments are missing then it returns a new
      connection and also places this connection in the option sqldf.connection.
      - Great to know that the connection is cached!
  - Notes
    - Big FYI: Commas in columns will be parsed as column separators!
      - Recommends using =read.table= if this matter
  - Examples
    - They all demonstrate how to do it in R and then again with SQL
    - Super helpful
    - You seem to be able to do everything that you would expect possible
  - Thoughts
    - Need to grok both R and SQL to use this safely
    - Using temp tables is kind of huge
    - Via [fn:55ef7537: https://stackoverflow.com/questions/19019883/how-to-handle-column-names-not-supported-by-sqldf-in-r]
      - Use =_= instead lf =.= in column names from a R call
        - Where is this in the documentation?

Notes from the official site [fn:078aba0c: https://code.google.com/p/sqldf/]
- Opening
  - How it works
    - The user simply specifies an SQL statement
    - in R using data frame names in place of table names
    - and a database with appropriate table layouts/schema is automatically
      created,
    - the data frames are automatically loaded into the database,
    - the specified SQL statement is performed,
    - the result is read back into R
    - and the database is deleted all automatically behind the scenes making the
      database's existence transparent to the user who only specifies the SQL
      statement.
  - Supports
    - SQLite
    - H2
    - PostgreSQL
    - MySQL
  - The FAQ mostly talks about SQLite
- Overview
  - with sqldf the user is freed from having to do the following, all of which
    are automatically done:
    - database setup
    - writing the create table statement which defines each table
    - importing and exporting to and from the database
    - coercing of the returned columns to the appropriate class in common cases
  - It an be used for
    - learning R if you know SQL
    - Doing it faster than R
    - Load portions of a really large file
- Troubleshooting
  - Set the driver expicitly
  - "error messages regarding a data frame that has a dot in its name. The dot
    is an SQL operator. Either quote the name appropriately or change the name
    of the data frame to one without a dot."
- FAQ
  - Column class conversion touched upon
  - Dots in names
    - Dots are SQL operators so can't use them
      - See =?SQL92Keywords=
    - For columns
      - Either use underscore
      - Or simply remove them
    - For tables
      - Double quote the name
  - H2 supports date types, which seems quite helpful
  - Name a column ending with two underscores and a type and the library will
    convert the type to R correctly
    - Mentioned in the docs
  - SQL is case *insensitive*
    - Don't rely on casing to differentiate column names
  - We may examine the in-memory database table structure
  - Be quite careful about CSV data that contains commas again as this lib
    won't handle it
  - Good examples of cleaning data gettig int into a R friendly format
  - Be sure to specify numeric values as integers or doubles so you get expected
    results from division
- Examples
  - Example 1. Ordering and Limiting
  - Example 2. Averaging and Grouping
  - Example 3. Nested Select
  - Example 4. Join
  - Example 5. Insert Variables
    - Hugely convenient
  - Example 6. File Input
  - Example 7. Nested Select
  - Example 8. Specifying File Format
  - Example 9. Working with Databases
  - Example 10. Persistent Connections
  - Example 11. Between and Alternatives
  - Example 12. Combine two files in permanent database
  - Example 13. read.csv.sql and read.csv2.sql
    - Uses SQLite's import facility to create an in-memory database
    - Then it reads the results of the query into R
    - The import does not involve R so it can handle larger files than R can
      assuming that the query results in a size that does fit
  - Example 14. Use of spatialite library functions
  - Example 15. Use of RSQLite.extfuns library functions
  - Example 16. Moving Average

SQLite, SQL As Understood By SQLite:
- [[https://www.sqlite.org/lang_corefunc.html][Core Functions]]
- [[https://www.sqlite.org/lang_aggfunc.html][Aggregate Functions]]
- [[https://www.sqlite.org/lang_datefunc.html][Date And Time Functions]]
- These previous are all provided by [[http://cran.r-project.org/web/packages/RSQLite.extfuns/index.html][RSQLite.extfuns]]

=proto= wouldn't load, so first configure =sqldf= via [[https://stackoverflow.com/questions/17128260/r-stuck-in-loading-sqldf-package][this solution]].

#+NAME: org_gcr_2017-05-12_mara_8708D312-6CA6-4125-AE17-FF00CC503CC7
#+BEGIN_SRC R
options(gsubfn.engine="R")
#+END_SRC

#+NAME: org_gcr_2017-05-12_mara_FD54A8D7-65AA-4146-A094-DDB91809560D
#+begin_src R
library(sqldf)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_E12CC48D-3E41-428E-8D1A-AFEE791F66C8
#+begin_src R :noweb-ref rinstall-def
if(! require(sqldf)) {
    install.packages("sqldf")
}
#+end_src

**** MASS
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:A577D755-41C6-4E7E-9637-6118FCD5944B
:END:

"Functions and datasets to support Venables and Ripley, 'Modern Applied
Statistics with S' (4th edition, 2002)." Also, =sqldf= recommended it be
installed, so it is the right time. [fn:4d284c54: http://cran.r-project.org/web/packages/MASS/index.html]

#+NAME: org_gcr_2017-05-12_mara_AC4A011C-9933-4334-BDA6-AEA41F8BAAD0
#+begin_src R
library(MASS)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_D230D03A-F0C1-4002-B5F7-980FEEA00852
#+begin_src R :noweb-ref rinstall-def
if(! require(MASS)) {
    install.packages("MASS")
}
#+end_src

**** jsonlite
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:B2715DBA-4A80-4DB8-B3BD-C660302D3FB9
:END:

Make it easy to work with JSON [37138455: http://cran.r-project.org/web/packages/jsonlite/index.html].
Reading the vignette's, it does a lot more, for example =rbind.pages=.

#+NAME: org_gcr_2017-05-12_mara_81499C37-5163-4CE5-B2B3-3FB82FF5B30E
#+begin_src R
library(jsonlite)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_0D6D6DFE-C8BF-48C1-8F78-471F103162BE
#+begin_src R :noweb-ref rinstall-def
if(! require(jsonlite)) {
    install.packages("jsonlite")
}
#+end_src

**** dplyr
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:F2C4419D-59D8-423F-97A8-2C4ED2246186
:END:

dplyr: a grammar of data manipulation in R

The fact that I am loading both =plyr= and =dplyr= is something that I am
questioning. I do so because I learned them in that order, so left it that way.
However, this just results in *more* binding shadowing, and I am not sure of the
implications, and they are usually never good.

#+begin_quote
[[http://cran.r-project.org/web/packages/dplyr/index.html][A fast, consistent tool]] for working with data frame like objects, both in memory and out of memory.
#+end_quote

[[http://cran.r-project.org/web/packages/dplyr/README.html][Readme]]. [[http://cran.r-project.org/web/packages/dplyr/dplyr.pdf][Manual]]. [[http://cran.r-project.org/web/packages/dplyr/vignettes/introduction.html][Introduction to dplyr]].

#+NAME: org_gcr_2017-05-12_mara_BF403663-EA6F-4DEF-96D8-53460EC01901
#+begin_src R
library(dplyr)
#+end_src

**** data.table
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:1604B2A7-7110-45B5-BB29-C27BDE9F37C4
:END:

=data.table= [fn:de30b846: http://cran.r-project.org/web/packages/data.table/index.html ]
is quite nice.

#+NAME: org_gcr_2017-05-12_mara_4F1AA6B0-18CF-4D27-BEEE-22F3575641A4
#+begin_src R
library(data.table)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_90160989-EC0D-4BEC-AC7B-F28BDAD36759
#+begin_src R :noweb-ref rinstall-def
if(! require(data.table)) {
    install.packages("data.table")
}
#+end_src

***** dtplyr
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:169E4CE8-D5BE-48F7-A43F-E89CEE4C6211
:END:

#+NAME: org_gcr_2017-05-12_mara_83D232DA-8D97-4284-96DB-DADB9862F228
#+begin_src R
library(dtplyr)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_92F783DE-ADA4-413A-B06D-967AA93EB141
#+begin_src R :noweb-ref rinstall-def
if(! require(dplyr)) {
    install.packages("dplyr")
}
#+end_src

#+NAME: org_gcr_2017-05-12_mara_7EC8A890-B67D-444C-9B9D-025A7A844F42
#+begin_src R :noweb-ref rinstall-def
if(! require(dtplyr)) {
    install.packages("dtplyr")
}
#+end_src

**** XML
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:4F801FC6-2D93-495E-9B7A-5FE6C5A1003A
:END:

Make ℝ truly enterprise [fn:bf8a1f82: http://cran.r-project.org/web/packages/XML/index.html].

#+NAME: org_gcr_2017-05-12_mara_A7A52714-2EBB-4AC1-BEFE-5B03B90078A8
#+begin_src R
library(XML)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_262E11ED-2048-41D6-BFA4-1368DAE75DCC
#+begin_src R :noweb-ref rinstall-def
if(! require(XML)) {
    install.packages("XML")
}
#+end_src

**** devtools
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:6BC90505-4FF2-4DB0-8020-F5F8057BA984
:END:

=devtools=: Tools to make developing ℝ code easier

#+begin_quote
[[http://cran.r-project.org/web/packages/devtools/index.html][Collection of package development tools]]
#+end_quote

That is a bit too terse. Intro to the README follows

#+begin_quote
The aim of devtools is to make your life as a package developer easier by providing R functions that simplify many common tasks. R packages are actually really simple, and with the right tools it should be easier to use the package structure than not. Package development in R can feel intimidating, but devtools does every thing it can to make it as welcoming as possible. devtools comes with a small guarantee: if because of a bug in devtools a member of R-core gets angry with you, I will send you a handwritten apology note. Just forward me the email and your address, and I'll get a card in the mail.
#+end_quote

Excellent.

[[http://cran.r-project.org/web/packages/devtools/README.html][Readme]]. [[http://cran.r-project.org/web/packages/devtools/devtools.pdf][Manual]]. [[https://github.com/hadley/devtools][Github]].

At the very least, just /know of/ this package, as you will be installing it if
you want to us =tidyr=.

#+NAME: org_gcr_2017-05-12_mara_2B4AA89B-247C-46DD-A301-6344F0DBDD55
#+begin_src R
library(devtools)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_9B9089AF-61CE-4448-8A4D-F250FB5209C3
#+begin_src R :noweb-ref rinstall-def
if(! require(devtools)) {
    install.packages("devtools")
    devtools::install_github("hadley/devtools")
}

#+end_src

**** magrittr
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:E4F80968-F698-4B63-B3F8-745625D74C39
:END:

This is a add from the /most understated package definition/ of the year
department. =magrittr= [fn:73ee53da: http://cran.r-project.org/web/packages/magrittr/index.html]
is, much like every Scheme library ever, deceptively simple in its power and
ease of use that it provides.

#+NAME: org_gcr_2017-05-12_mara_0E618832-34E5-493A-AF7D-2CD2639E96AA
#+begin_src R
library(magrittr)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_BE75C93B-FA42-403F-AAC5-511B6830B77F
#+begin_src R :noweb-ref rinstall-def
if(! require(magrittr)) {
    devtools::install_github("smbache/magrittr")
}
#+end_src

**** reshape2
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:68274778-C58F-43D2-92D3-EBD90025A8D0
:END:

=reshape2=: Flexibly reshape data: a reboot of the =reshape= package

#+begin_quote
Reshape lets you flexibly restructure and aggregate data using just two functions: melt and cast.
#+end_quote

[[http://cran.r-project.org/web/packages/reshape2/index.html][CRAN]]. [[http://cran.r-project.org/web/packages/reshape2/reshape2.pdf][Manual]]. [[https://github.com/hadley/reshape/blob/master/README.md][Github]].

This seems to be a defacto standard.

#+NAME: org_gcr_2017-05-12_mara_7DA54C1E-71A1-4843-99A9-FCE9866EE1A7
#+begin_src R
library(reshape2)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_5307205D-58F2-48B1-A876-C09C2C37EB6F
#+begin_src R :noweb-ref rinstall-def
if(! require(reshape2)) {
    install.packages("reshape2")
}
#+end_src

**** tidyr
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:5CE86E38-28A9-48F0-92F8-0874C7B89DEE
:END:

=tidyr=: Easily tidy data with spread and gather functions for ℝ

#+begin_quote
[[http://cran.r-project.org/web/packages/tidyr/index.html][tidyr]] is an evolution of reshape2. It's design specifically for data tidying (not general reshaping or aggregating) and works well with dplyr data pipelines.
#+end_quote

[[http://cran.r-project.org/web/packages/tidyr/README.html][Readme]]. [[http://cran.r-project.org/web/packages/tidyr/tidyr.pdf][Manual]]. [[https://github.com/hadley/tidyr][Github]].

Not on CRAN yet so install via

#+NAME: org_gcr_2017-05-12_mara_F9C761C3-1513-4BF4-99E9-05B225592D36
#+begin_src R
library(tidyr)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_5F0C0855-9BB8-4CC4-B05F-C7F654997BAC
#+begin_src R :noweb-ref rinstall-def
if(! require(tidyr)) {
    devtools::install_github("hadley/tidyr")
}

#+end_src

**** lubridate
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:7F0E1F05-B547-4E6A-AFBF-E9E9D3FF1059
:END:

lubridate: Make dealing with dates a little easier in ℝ

#+begin_quote
[[http://cran.r-project.org/web/packages/lubridate/index.html][Lubridate]] makes it easier to work with dates and times by providing functions to identify and parse date-time data, extract and modify components of a date-time (years, months, days, hours, minutes, and seconds), perform accurate math on date-times, handle time zones and Daylight Savings Time. Lubridate has a consistent, memorable syntax, that makes working with dates fun instead of frustrating.
#+end_quote

[[http://cran.r-project.org/web/packages/lubridate/lubridate.pdf][Manual]]. [[http://cran.r-project.org/web/packages/lubridate/vignettes/lubridate.html][Vignette]].

#+NAME: org_gcr_2017-05-12_mara_73EDACC9-C2BC-4648-B304-64E4CC6279E8
#+begin_src R
library(lubridate)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_13C5AEA5-C8E3-4697-8F05-C475FEB72AAC
#+begin_src R :noweb-ref rinstall-def
if(! require(lubridate)) {
    install.packages("lubridate")
}
#+end_src

Perhaps in some /time/ there will be a unified approach to time-management among
all programming languages.

**** testit
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:4D15CAB4-E41F-4329-ABD3-6352BB53211C
:END:

testit: A simple package for testing R packages

[[https://github.com/yihui/testit][GitHub]]. [[http://cran.rstudio.com/web/packages/testit/index.html][CRAN]]. [[http://cran.rstudio.com/web/packages/testit/testit.pdf][Manual]].

Gives you =assert= and =test_pkg=. Save characters.

#+NAME: org_gcr_2017-05-12_mara_1F82B124-3A21-481F-8407-2FCB8BAB9B0B
#+begin_src R
library(testit)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_7514A801-7BBF-4AC8-8A93-98EC0EF06507
#+begin_src R :noweb-ref rinstall-def
if(! require(testit)) {
    install.packages("testit")
}
#+end_src

**** markdown
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:A060E8EA-7F3C-4A33-8001-EE936782065A
:END:

- [[http://cran.r-project.org/web/packages/markdown/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/markdown/markdown.pdf][reference]]
  - [[http://cran.r-project.org/web/packages/markdown/vignettes/markdown-examples.html][vignettes: markdown-examples]]
  - [[http://cran.r-project.org/web/packages/markdown/vignettes/markdown-output.html][vignettes: markdown-output]]
- [[https://github.com/rstudio/markdown][GitHub]]

#+NAME: org_gcr_2017-05-12_mara_6F11689D-25AE-47BB-9150-8AAA0C646D6C
#+begin_src R
library(markdown)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_60BB724D-8AE3-497A-918C-9A44AB169740
#+begin_src R :noweb-ref rinstall-def
if(! require(markdown)) {
    install.packages("markdown")
}
#+end_src

#+begin_quote
This package is referred to as R Markdown v1 when combined with knitr. The primary output format is HTML. Now we have introduced R Markdown v2, which is based on Pandoc and knitr, and supports much more types of output formats.
#+end_quote

**** knitr
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:90B8880A-A32A-4761-A05A-164144AE93AF
:END:

knitr: A general-purpose package for dynamic report generation in R

Read the [[http://yihui.name/knitr/][home page]]. It has great resources.

Watched [[https://www.screenr.com/qcv8][the video]]. Very nice to see; comfortable and familiar. Need to set up
RStudio for it. Clearly a critical tool. Cites Knuth.

Features are amazingly understated. If you've worked with all of these tools,
you will appreciate the importance of the author's effort!

=Objects=, =Options=, =Hooks=, and =Patterns= … what is this, Emacs?

There are demo [[http://yihui.name/knitr/demos][links]]. There is a [[https://github.com/yihui/knitr-examples][project for examples]]. This [[http://yihui.name/knitr/demo/showcase/][showcase]] has links
to websites, book reviews, solutions, R packages, courses, workshops and
presentations, books, papers and reports, wrappers, and blog posts on =knitr=.

[[https://github.com/yihui/knitr][Here]] is the GitHub project. Read the motivations and see the hours and days and
weeks that you have had spared! Uses =testit=, so read up on that and added it.

Read the [[https://github.com/yihui/knitr/blob/master/FAQ.md][Frequently Asked Questions]]. Joined the [[https://groups.google.com/forum/#!forum/knitr][mailing list]]. =ess= supports it.
Sure that I can configure the custom prompt. Great =README=.

[[http://cran.r-project.org/web/packages/knitr/index.html][CRAN]] as expected. Much better summary eg HTML, Makrdown, reStructuredText, and
AsciiDoc are mentioned. Curious about the cacheing, and how I would do it in
=org=. Custom code to run before and after a hunk are another thoughtful touch one
would expect coming from =org=. Also support Python and shell. The LaTeX and LyX
support is also pretty neat. Same [[http://cran.r-project.org/web/packages/knitr/README.html][READM]]E. [[http://cran.r-project.org/web/packages/knitr/knitr.pdf][Reference]].

Somehow missed the [[http://cran.r-project.org/web/packages/knitr/vignettes/knitr-refcard.pdf][reference card]] initially.

[[http://yihui.name/knitr/demo/vignette/][How to build package vignettes with knitr]].

#+NAME: org_gcr_2017-05-12_mara_A5B64729-F8B4-429E-A24F-5DC0BFB7AA4E
#+begin_src R
library(knitr)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_E65DF403-D8F4-4B18-9AF2-EF07F891FCD9
#+begin_src R :noweb-ref rinstall-def
if(! require(knitr)) {
    install.packages("knitr")
}
#+end_src

**** fortunes
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:420C813F-A6C0-41C9-8F4A-042DD8C4D059
:END:

R Fortunes.

[[http://cran.r-project.org/web/packages/fortunes/index.html][CRAN]].

#+NAME: org_gcr_2017-05-12_mara_21A2B6D3-05FE-4161-B0B3-A2B1A5184EAF
#+begin_src R
library(fortunes)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_5C7E3B93-1ABC-497D-94C0-E854F3EB8C6A
#+begin_src R :noweb-ref rinstall-def
if(! require(fortunes)) {
    install.packages("fortunes")
}
#+end_src

**** ggplot2
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:2CB46933-90E6-4366-BA74-71D2B1A4DE8D
:END:

- [[http://cran.r-project.org/web/packages/ggplot2/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/ggplot2/ggplot2.pdf][reference]]
- [[https://github.com/hadley/ggplot2][Github]]
  - [[https://github.com/hadley/ggplot2/wiki][wiki]]
    - Lots of great resources
      - Whyu use it, how to support it, improvide i
      - Publications using it, around the web
      - FAQ, roadmap
    - Case studies
    - Tips and tricks
    - Enhancements
- [[https://groups.google.com/forum/#!forum/ggplot2][Mail list]]
- [[http://ggplot2.org/][Homepage]]
  - [[http://docs.ggplot2.org/current/][Documentation]]

#+NAME: org_gcr_2017-05-12_mara_8251EDAD-800D-4AA6-9CF6-6D72D6C28726
#+begin_src R
library(ggplot2)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_DC1E00FC-2565-45BB-919A-EE51E3B19008
#+begin_src R :noweb-ref rinstall-def
if(! require(ggplot2)) {
    install.packages("ggplot2")
}
#+end_src

**** tikzDevice
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:9CDF266B-9DE6-42A4-846E-212B11070D6F
:END:

- [[http://cran.r-project.org/web/packages/tikzDevice/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/tikzDevice/tikzDevice.pdf][reference]]
  - [[http://cran.r-project.org/web/packages/tikzDevice/vignettes/tikzDevice.pdf][vignettes: tikzDevice]]
- [[https://github.com/yihui/tikzDevice][GitHub]]

#+NAME: org_gcr_2017-05-12_mara_B0E027B5-57BF-4594-B3A6-FA430EB2E97E
#+begin_src R
library(tikzDevice)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_0FD2B191-249B-4694-9CD1-A173801B417B
#+begin_src R :noweb-ref rinstall-def
if(! require(tikzDevice)) {
    install.packages("tikzDevice")
}
#+end_src

**** ascii
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:1645490F-7DEB-4227-8EAA-FBB1EFC329A0
:END:

- [[http://cran.r-project.org/web/packages/ascii/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/ascii/ascii.pdf][reference]]
- [[https://github.com/eusebe/ascii/][GitHub]]

#+NAME: org_gcr_2017-05-12_mara_FDD3F939-1F60-4123-AFC5-FA34275A09E4
#+begin_src R
library(ascii)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_EC4BE76A-ACC9-4172-9D26-E3F1372416F7
#+begin_src R :noweb-ref rinstall-def
if(! require(ascii)) {
    install.packages("ascii")
}
#+end_src

Always display =org= representations; I'm assuming that it will be /the/ dominant
vehicle for analysis.

#+NAME: org_gcr_2017-05-12_mara_E51BCB45-90E5-46F3-AFE6-C4B60E93597C
#+begin_src R
options(asciiType="org")
#+end_src

**** xtable
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:6438AA32-0335-4527-91BC-A90404AB36DD
:END:

- [[http://cran.r-project.org/web/packages/xtable/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/xtable/xtable.pdf][reference]]
  - [[http://cran.r-project.org/web/packages/xtable/vignettes/margintable.pdf][vignettes: margintable]]
  - [[http://cran.r-project.org/web/packages/xtable/vignettes/xtableGallery.pdf][vignettes: xtableGallery]]
- [[http://xtable.r-forge.r-project.org/][R-Forge]]

#+NAME: org_gcr_2017-05-12_mara_EE352CD5-AE55-430D-BA0B-41A56A74B81F
#+begin_src R
library(xtable)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_174E2929-B8BC-4AE4-BEF2-338FAECC9330
#+begin_src R :noweb-ref rinstall-def
if(! require(xtable)) {
    install.packages("xtable")
}
#+end_src

**** Hmisc
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:F42F3746-7E10-478D-ACAE-125BE4A15D5C
:END:

- [[http://cran.r-project.org/web/packages/Hmisc/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/Hmisc/Hmisc.pdf][reference]]
- [[https://github.com/harrelfe/Hmisc][GitHub]]

#+NAME: org_gcr_2017-05-12_mara_71B207A8-9A27-41EB-A70C-E46009281865
#+begin_src R
library(Hmisc)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_ED5F41D6-717C-4C6C-ABD4-F9BE0BC9CAAE
#+begin_src R :noweb-ref rinstall-def
if(! require(Hmisc)) {
    install.packages("Hmisc")
}
#+end_src

**** log4r
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:C6F05623-CF1C-46D0-A911-2ABB014267AF
:END:

- [[http://cran.r-project.org/web/packages/log4r/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/log4r/log4r.pdf][reference]]
- [[https://github.com/johnmyleswhite/log4r][GitHub]]

#+NAME: org_gcr_2017-05-12_mara_082A541A-C479-4CAC-9F23-51A34BD7AF11
#+begin_src R
library(log4r)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_DB77D13B-83D4-4465-8F2F-82D9921A3EA0
#+begin_src R :noweb-ref rinstall-def
if(! require(log4r)) {
    install.packages("log4r")
}
#+end_src

**** boot
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:1EC5636D-D340-4F00-BBEF-579000725366
:END:

- [[http://cran.r-project.org/web/packages/boot/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/boot/boot.pdf][reference]]

#+NAME: org_gcr_2017-05-12_mara_6A9C1011-0E52-4729-A15E-BDA3DE01D7C9
#+begin_src R
library(boot)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_DD3E0FE3-59A3-449A-8C1D-D821A205545D
#+begin_src R :noweb-ref rinstall-def
if(! require(boot)) {
    install.packages("boot")
}
#+end_src

**** kernlab
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:1860ABE6-06F1-449C-A5E4-EBCDEE4B8EB8
:END:

- [[http://cran.r-project.org/web/packages/kernlab/index.html][CRAN]]
  - [[http://cran.r-project.org/web/packages/kernlab/kernlab.pdf][reference]]
  - [[http://cran.r-project.org/web/packages/kernlab/vignettes/kernlab.pdf][vignettes: kernlab]]
- GitHub

#+NAME: org_gcr_2017-05-12_mara_04200AA3-C30B-410B-A9A1-C89DA77A633B
#+begin_src R
library(kernlab)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_9A4FE214-1F39-4CCD-97FC-3C6EDA6439D0
#+begin_src R :noweb-ref rinstall-def
if(! require(kernlab)) {
    install.packages("kernlab")
}
#+end_src

**** R Utils
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:5AAB5490-A3D4-42E1-9630-15E9CE8A6D63
:END:

Programatically extract BZ2 files. Helpful for making decompression a
separarate task from loading.

#+NAME: org_gcr_2017-05-12_mara_885D2413-5670-4318-8427-B811AAAB2489
#+begin_src R
library(R.utils)
#+end_src

#+NAME: org_gcr_2017-05-12_mara_50B4B233-C2AD-45AB-B342-E4F6F2CAD200
#+begin_src R :noweb-ref rinstall-def
if(! require(R.utils)) {
    install.packages("R.utils")
}
#+end_src

**** Not explicitly loaded, but interesting packages
:PROPERTIES:
:ID:       org_gcr_2017-05-12_mara:62914096-7336-4480-B8E4-950E2A553AA8
:END:

- [[http://projecttemplate.net/index.html][ProjectTemplate]]
- [[http://cran.r-project.org/web/packages/evaluate/index.html][evaluate]].utils
- [[http://cran.r-project.org/web/packages/yaml/index.html][yaml]]
- [[http://cran.r-project.org/web/packages/whisker/index.html][whisker]]
- [[http://cran.r-project.org/web/packages/formatR/index.html][formatR]]
- General caching [fn:452e6ab4: https://stackoverflow.com/questions/7262485/options-for-caching-memoization-hashing-in-r]
- [[http://cran.r-project.org/web/packages/stringi/index.html][stringi]]
  - [[http://www.r-bloggers.com/faster-easier-and-more-reliable-character-string-processing-with-stringi-0-3-1/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
  - Seems focused on Unicode details
  - Why this instead of =stringr=?
- [[http://cran.r-project.org/web/packages/futile.options/index.html][futile.options: Futile options management]]
  - Referenced by the =settings= article
- [[http://cran.r-project.org/web/packages/settings/][settings: Software Option Settings Manager for R]]
  - [[http://www.r-bloggers.com/easy-to-use-option-settings-management-with-the-settings-package/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://github.com/craigcitro/r-travis][r-travis]]
  - [[http://www.r-bloggers.com/travis-ci-to-github-pages/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://github.com/MangoTheCat/testCoverage][testCoverage]]
  - [[http://www.r-statistics.com/2014/11/analyzing-coverage-of-r-unit-tests-in-packages-the-testcoverage-package/][Via]]
- [[http://cran.r-project.org/web/packages/xkcd/index.html][xkcd]]
  - [[http://www.exegetic.biz/blog/2014/11/creating-more-effective-graphs/?utm_source%3Drss&utm_medium%3Drss&utm_campaign%3Dcreating-more-effective-graphs][Via]]
- [[https://github.com/EconometricsBySimulation/Ninja/blob/master/2014/11/circ.graph.R][circ.graph.R]]
  - [[http://www.r-bloggers.com/make-your-own-hotly-criticised-circle-graph/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://github.com/yhat/pandasql][pandasql]]
  - [[http://www.r-bloggers.com/query-pandas-dataframe-with-sql/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://cran.r-project.org/web/packages/qdap/index.html][qdap: Bridging the Gap Between Qualitative Data and Quantitative Analysis]]
  - Glad to find this
  - [[http://www.r-bloggers.com/exploration-of-letter-make-up-of-english-words/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://github.com/environmentalinformatics-marburg/Rsenal][Rsenal]]
  - [[http://www.r-bloggers.com/introducing-rsenal-magic-r-functions-for-things-various/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
  - Wished I had this the ohther day
- [[https://rapporter.github.io/pander/][pander]]
  - [[http://www.r-bloggers.com/pander-0-5-0-the-next-generation-of-markdown-tables-in-r/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://deployr.revolutionanalytics.com/][DeployR]]
  - [[http://www.r-bloggers.com/integrate-r-into-applications-with-deployr-open/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://cran.r-project.org/web/packages/openssl/][openssl: Bindings to OpenSSL]]
  - [[http://www.r-bloggers.com/generating-secure-random-numbers-with-openssl/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://github.com/Bart6114/simmer][simmer]]
  - Again I would have had to have written this myself
  - [[http://www.r-bloggers.com/simmer-2-0-a-performance-boost-revised-syntax/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://cran.r-project.org/web/packages/checkpoint/index.html][checkpoint: Install Packages from Snapshots on the Checkpoint Server for Reproducibility]]
  - [[http://www.r-bloggers.com/introducing-the-reproducible-r-toolkit-and-the-checkpoint-package/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://cran.r-project.org/web/packages/miniCRAN/index.html][miniCRAN: Tools to create an internally consistent, mini version of CRAN with selected packages only]]
  - [[http://www.r-bloggers.com/introducing-minicran-an-r-package-to-create-a-private-cran-repository/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://reaktanz.de/?c%3Dhacking&s%3DroxyPackage][roxyPackage]]
  - [[http://www.r-bloggers.com/managing-r-package-dependencies/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://cran.r-project.org/web/packages/roxygen2/index.html][roxygen2: In-source documentation for R]]
  - =roxypackage= mentioend it
- [[http://cran.r-project.org/web/packages/archivist/index.html][archivist: Tools for storing, restoring and searching for R objects]]
  - [[http://www.r-bloggers.com/lazy-load-with-archivist/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://dirk.eddelbuettel.com/code/pkgkitten.html][pkgKitten]]
  - [[http://www.r-bloggers.com/pkgkitten-0-1-1-still-creating-r-packages-that-purr/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://ramnathv.github.io/rCharts/][rCharts]]
  - [[http://www.r-bloggers.com/interactive-visualizations-from-r-using-rcharts/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[https://github.com/dgrtwo/broom][broom: Convert statistical analysis objects from R into tidy format]]
  - [[http://www.r-bloggers.com/r-package-to-convert-statistical-analysis-objects-to-tidy-data-frames/?utm_source%3Dfeedburner&utm_medium%3Dfeed&utm_campaign%3DFeed%253A%2BRBloggers%2B%2528R%2Bbloggers%2529][Via]]
- [[http://mran.revolutionanalytics.com/packages/info/?igraph][igraph: Network analysis and visualization]]
  - Why did they link to MRAN?
  - Looks like a great tool for learning about graphcs
  - [[http://www.r-bloggers.com/a-look-at-the-igraph-package/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%253A+RBloggers+%2528R+bloggers%2529][Via]]

** .First
      :PROPERTIES:
      :header-args: :noweb-ref rfirst-defs
      :ID:       org_gcr_2017-05-12_mara:DB8DE38B-83C2-4CF9-B428-4629E4E06547
      :END:

Reading:
- [[http://stat.ethz.ch/R-manual/R-devel/library/base/html/Startup.html][Startup]] :: mandatory reading, the definitive source
- [[http://cran.r-project.org/doc/contrib/Lemon-kickstart/kr_first.html][Kickstarting R]] :: I just like this tutorial

- =attach= is a powerfuly convenient function. Sure, it can make you and your
  program go bonkers, but you know, it is worth it for the convenience. Joking
  aside, it has its place, so it should not go away completely. However, it ought
  not be used much, and if you do need to use it, the it should be really really
  obvious.
  - Eg: [fn:7ce54638: http://www.r-bloggers.com/to-attach-or-not-attach-that-is-the-question/]
#+NAME: org_gcr_2017-05-12_mara_45C9CCC7-16B0-463F-8E97-15B1680256FE
#+begin_src R
gcr$attach.unsafe <- attach
gcr$attach <- function(...) {
    warning("NEVER USE ATTACH! Use `unsafe.attach` if you must.")
    attach.unsafe(...)
}
#+end_src

- =library= reports issues immediately, and by design, =require= does not… remind
  the useR that they /may/ want the former not the latter
  - Via [fn:84031d95: http://www.r-bloggers.com/library-vs-require-in-r/]
  - Just like everything else here, this is a /personal preference/ thing!
#+NAME: org_gcr_2017-05-12_mara_F1DC88CC-9F93-41E7-8736-784E2EACF23F
#+begin_src R
gcr$require <- function(...) {
    warning("Are you sure you wanted `require` instead of `library`?")
    base::require(...)
}
#+end_src

Sometimes you only want to list everything *but* functions [fn:7b11c35d: https://stackoverflow.com/questions/13094324/hiding-function-names-from-ls-results-to-find-a-variable-name-more-quickly]:
#+NAME: org_gcr_2017-05-12_mara_86FC1743-F679-45B1-AD21-0A8A6F699225
#+begin_src R
gcr$lsnofun <- function(name = parent.frame()) {
    obj <- ls(name = name)
    obj[!sapply(obj, function(x) is.function(get(x)))]
}
#+end_src

Make it really simple to specify how to handle errors in a given session:
#+NAME: org_gcr_2017-05-12_mara_D959F4C7-DC16-4A96-9928-0A1D9B328431
#+begin_src R
gcr$recoveronerror <- function() {
    options(error=recover)
}

gcr$recoveronerroroff <- function() {
    options(error=NULL)
}
#+end_src

Make it really simple to specify how to handle warnings in a given session:
#+NAME: org_gcr_2017-05-12_mara_A1A5310B-3C47-4295-A721-70546CFE0BFB
#+begin_src R
gcr$erroronwarn <- function() {
    options(warn=2)
}

gcr$erroronwarnoff <- function() {
    options(warn=0)
}
#+end_src

=sqldf= should always use =SQLite=.

#+NAME: org_gcr_2017-05-12_mara_1E1231CF-97D0-4A23-9AE7-B78DA7F87F5D
#+begin_src R
options(sqldf.driver = "SQLite")
#+end_src

Save your fingers from having to type =head= the next =n= thousand times [fn:f9fcc455: https://stackoverflow.com/questions/13024167/how-to-make-head-be-applied-automatically-to-output] because I can't. =ess-rdired= and friends use the dataframe print function,
so I didn't make dataframes print using it.
#+NAME: org_gcr_2017-05-12_mara_C8228D0B-C98E-4732-8E04-5778886EBAB4
#+begin_src R
gcr$printdf <- function(df) {
    if (nrow(df) > 10) {
        print(head(df, 5))
        cat("---\n")
        print(tail(df, 5))
    } else {
        print(df)
    }
}
#+end_src

Sometimes you want to see all of the data in a dataframe, and sometimes you
don't. Make it really easy to change whenever you feel like it.

#+NAME: org_gcr_2017-05-12_mara_AB49EDDD-82C2-49C0-923A-75E3B3A6DD4E
#+begin_src R
gcr$printlen <- function(len=500) {
    options("max.print" = len)
}
#+end_src

When you've got =n=-thousand rows of data, make it easier to get a sample from it,
just make it specific and keep it simple.

#+NAME: org_gcr_2017-05-12_mara_2F328A8E-E928-4916-B756-6569CCD437E5
#+begin_src R
gcr$hundred <- function(df, idx=0) {
    df[idx:(idx+100),]
}
#+end_src

** .Renviron
      :PROPERTIES:
      :header-args: :noweb-ref renviron-def
      :ID:       org_gcr_2017-05-12_mara:9C053DA5-163C-4C31-9590-15F1BC5EF2DD
      :END:

Install all packages to my home directory [fn:daab690d: http://www.r-bloggers.com/installing-r-packages/]
- Call =.libPaths()= to verify
- The directory must exist otherwise ℝ will ignore it
  - Solution:
    - Manual for now
    - Unsure of best way to generalize it
#+NAME: org_gcr_2017-05-12_mara_640084E4-4804-4CAD-98BC-9F3CAC731DE6
#+begin_src sh
R_LIBS=~/.Rpackages
#+end_src

For the time being, GUI work will only be performed on OSX so utilize OSX's
renderer [91578029: http://emacs.1067599.n5.nabble.com/unable-to-start-device-X11-td330804.html].

That worked fine until I actually starting using that graphics device!

Then even though I was on OSX I *had* to switch to =X11=.

<2014-11-05 Wed>
That was probably a mistake. The folks on-list said that =quartz= should be super.
Perhaps the error was between the keyboard and the chair, so I am switching
back.

<2014-11-08 Sat>
When I us =ggplot= and quarts on this system, it blows up.

<2014-11-25 Tue>
Switched to the official CRAN R build, which works fine on OSX.

#+NAME: org_gcr_2017-05-12_mara_5EF545C1-D37E-4B7C-8943-DF4BA7F3F178
#+begin_src sh
R_INTERACTIVE_DEVICE=quartz
#+end_src

Explicitly state the timezone. This could be done either here or in the =.profile=.
I'm not totally sure where to put it. Because I am trying to do *everything* with,
I will put it here. Perhaps this should get set via =Sys.setenv= instead? I'll
leave it for now and fix it later if necessary. I did test this out with a call
to =Sys.time()= and it worked correctly.

#+NAME: org_gcr_2017-05-12_mara_78690D30-A36C-4D81-A123-534640CBAEB1
#+begin_src sh
TZ=America/Chicago
#+end_src


